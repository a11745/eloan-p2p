<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmg.p2p.business.mapper.RechargeOfflineMapper" >
  <resultMap id="BaseResultMap" type="com.xmg.p2p.business.domain.RechargeOffline" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="auditTime" property="auditTime" jdbcType="TIMESTAMP" />
    <result column="applyTime" property="applyTime" jdbcType="TIMESTAMP" />
  
    <result column="tradeCode" property="tradeCode" jdbcType="VARCHAR" />
    <result column="tradeTime" property="tradeTime" jdbcType="TIMESTAMP" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    
     <association property="applier" javaType="com.xmg.p2p.base.domain.Logininfo" columnPrefix="ap_">
    	<id column="id" property="id"/>
    	<result column="username" property="username"/>
    </association>
    
    <association property="auditor" javaType="com.xmg.p2p.base.domain.Logininfo" columnPrefix="au_">
    	<id column="id" property="id"/>
    	<result column="username" property="username"/>
    </association>
   
   <!-- 新的写法  意思同上 --> 
    <association property="bankInfo" javaType="com.xmg.p2p.business.domain.PlatformBankinfo"
    columnPrefix="pb_" resultMap="com.xmg.p2p.business.mapper.PlatformBankinfoMapper.BaseResultMap" />
</resultMap>
	<sql id="base_column">
		r.id, r.state, r.remark, r.auditTime, r.applyTime,  r.tradeCode, 
	    r.tradeTime, r.amount, r.note, 
	    ap.id as ap_id , ap.username as ap_username ,
	    au.id as au_id , au.username as au_username ,
	    pb.id as pb_id ,pb.bankName as pb_bankName , pb.forkName as pb_forkName , 
	    pb.accountName as pb_accountName , pb.accountNumber as pb_accountNumber
	</sql>
	
	<sql id="base_table">
		rechargeoffline  r JOIN logininfo ap ON r.applier_id = ap.id
   							LEFT JOIN logininfo au ON r.auditor_id =au.id
   							join platformbankinfo pb on r.bankInfo_id = pb.id 
	</sql>

  <insert id="insert" parameterType="com.xmg.p2p.business.domain.RechargeOffline" useGeneratedKeys="true" keyProperty="id" >
    insert into rechargeoffline (state, remark, auditTime,applyTime, auditor_id, applier_id, 
      tradeCode, tradeTime, amount,  note, bankInfo_id)
    values (#{state,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, #{auditTime,jdbcType=TIMESTAMP}, 
      #{applyTime,jdbcType=TIMESTAMP}, #{auditor.id,jdbcType=BIGINT}, #{applier.id,jdbcType=BIGINT}, 
      #{tradeCode,jdbcType=VARCHAR}, #{tradeTime,jdbcType=TIMESTAMP}, #{amount,jdbcType=DECIMAL}, 
      #{note,jdbcType=VARCHAR}, #{bankInfo.id,jdbcType=BIGINT})
  </insert>
  
  
  <update id="updateByPrimaryKey" parameterType="com.xmg.p2p.business.domain.RechargeOffline" >
    update rechargeoffline
    set state = #{state,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      auditTime = #{auditTime,jdbcType=TIMESTAMP},
      applyTime = #{applyTime,jdbcType=TIMESTAMP},
      auditor_id = #{auditor.id,jdbcType=BIGINT},
      applier_id = #{applier.id,jdbcType=BIGINT},
      tradeCode = #{tradeCode,jdbcType=VARCHAR},
      tradeTime = #{tradeTime,jdbcType=TIMESTAMP},
      amount = #{amount,jdbcType=DECIMAL},
      note = #{note,jdbcType=VARCHAR},
      bankInfo_id = #{bankInfo.id,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
   <sql id="condition">
	  <where>
	  	<if test="state>-1">
	  		AND r.state = #{state} 
	  	</if>
	  	<if test="beginDate!=null">
	  		AND r.tradeTime &gt;= #{beginDate}
	  	</if>
	  	<if test="endDate!=null">
	  		AND r.tradeTime &lt;= #{endDate}
	  	</if>
	  	<if test="applierId!=null">
	  		AND r.applier_id = #{applierId}
	  	</if>
	  	
	  	<if test="bankInfoId >-1">
	  		AND r.bankInfo_id = #{bankInfoId}
	  	</if>
	  	<if test="tradeCode!=null">
	  		AND r.tradeCode = #{tradeCode}
	  	</if>
	  	
	  	
	  </where>
  </sql>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select <include refid="base_column" />
    from <include refid="base_table" />
    where r.id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="queryForCount" resultType="int">
  	select count(r.id) 
  	from rechargeoffline r
  </select>
  
  <select id="query" resultMap="BaseResultMap">
  	select <include refid="base_column" />
    from <include refid="base_table" />
    <include refid="condition" />
    limit #{start} , #{pageSize}
  </select>
  

</mapper>